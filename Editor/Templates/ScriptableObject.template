// AUTOGENERATED FILE
// DO NOT MODIFY DIRECTLY
using System;
using System.Collections.Generic;
using System.Linq;
using PocketGems.Parameters;
using PocketGems.Parameters.DataTypes;
using PocketGems.Parameters.Editor;
using PocketGems.Parameters.Interface;
using PocketGems.Parameters.Types;
using PocketGems.Parameters.Validation;
using UnityEngine;
{{~if isAddressable~}}
using UnityEngine.AddressableAssets;
{{~end~}}

namespace {{namespace}}
{
    [CreateAssetMenu(fileName = "{{baseName}}", menuName = "Parameters/{{baseName}}", order = {{order}})]
    internal class {{className}} : ParameterScriptableObject
#if !{{disableSymbol}}
        , {{interfaceName}}
#endif
    {
{{~for property in properties~}}
    {{~lines = property | regex.split `\n`~}}
    {{~for line in lines~}}
        {{line}}
    {{~end~}}
{{~end~}}

        public override ValidationError[] ValidationErrors()
        {
#if {{disableSymbol}}
            var error = new ValidationError(GetType(), Identifier, null,
                $"Generated code is in a bad state.\nRun menu item: {MenuItemConstants.RegenerateCodePath}");
            return new [] { error };
#else
            var parameterManager = EditorParams.ParameterManager;
            if (parameterManager == null)
            {
                var error = new ValidationError(GetType(), Identifier, null,
                    $"Unable to run validation.  Missing parameter data file.\nRun menu item: {MenuItemConstants.RegenerateDataPath}");
                return new[] { error };
            }
            var validator = new ParameterManagerValidator(parameterManager);
            validator.ValidateObject<{{interfaceName}}>(({{interfaceName}})this);
            return validator.ValidationErrors.ToArray();
#endif
        }
    }
}
