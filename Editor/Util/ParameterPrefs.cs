using UnityEditor;

namespace PocketGems.Parameters.Util
{
    internal static class ParameterPrefs
    {
        /// <summary>
        /// Debug flag to control if auto generation of code should occur upon compilation
        /// </summary>
        public static bool AutoGenerateCodeOnCompilation
        {
            get => EditorPrefs.GetBool(AutoGenerateCodeOnCompilationKey, true);
            set => EditorPrefs.SetBool(AutoGenerateCodeOnCompilationKey, value);
        }

        /// <summary>
        /// Debug flag to control if auto generation of parameters should occur on detected parameter file change.
        /// </summary>
        public static bool AutoGenerateDataOnAssetChange
        {
            get => EditorPrefs.GetBool(AutoGenerateDataOnAssetChangeKey, true);
            set => EditorPrefs.SetBool(AutoGenerateDataOnAssetChangeKey, value);
        }

        /// <summary>
        /// Debug flag to control if auto validation of parameters should occur after assets have changed.
        /// </summary>
        public static bool AutoValidateDataOnAssetChange
        {
            get => EditorPrefs.GetBool(AutoValidateDataOnAssetChangeKey, true);
            set => EditorPrefs.SetBool(AutoValidateDataOnAssetChangeKey, value);
        }

        /// <summary>
        /// Flag to indicate if the next data generation should be a full asset generation.
        /// </summary>
        public static bool ShouldGenerateAllData
        {
            get => EditorPrefs.GetBool(ShouldGenerateAllDataKey);
            set => EditorPrefs.SetBool(ShouldGenerateAllDataKey, value);
        }

        /// <summary>
        /// Flag to enable/disable inspector auto save
        /// </summary>
        public static bool EnableInspectorAutoSave
        {
            get => EditorPrefs.GetBool(EnableInspectorAutoSaveKey, true);
            set => EditorPrefs.SetBool(EnableInspectorAutoSaveKey, value);
        }

        /// <summary>
        /// Enable if newly generated data files are hot loaded at runtime.
        /// </summary>
        public static bool PlayModeHotLoading
        {
            get => EditorPrefs.GetBool(PlayModeHotLoadingKey, true);
            set => EditorPrefs.SetBool(PlayModeHotLoadingKey, value);
        }

        /// <summary>
        /// Toggle to not delete the FlatBuffer schema file
        /// </summary>
        public static bool DoNotDeleteSchemaFile
        {
            get => EditorPrefs.GetBool(DoNotDeleteSchemaFileKey, false);
            set => EditorPrefs.SetBool(DoNotDeleteSchemaFileKey, value);
        }

        /// <summary>
        /// Toggle the expanding capability for ParameterReference<> custom drawer in case it is broken/blocking.
        /// </summary>
        private static bool? s_cachedExpandableDrawer;
        public static bool ExpandableDrawer
        {
            get
            {
                if (!s_cachedExpandableDrawer.HasValue)
                    s_cachedExpandableDrawer = EditorPrefs.GetBool(ExpandableDrawerKey, true);
                return s_cachedExpandableDrawer.Value;
            }
            set
            {
                EditorPrefs.SetBool(ExpandableDrawerKey, value);
                s_cachedExpandableDrawer = null;
            }
        }

        /// <summary>
        /// Flag to enable verbose amount of debug logs ot the console.
        /// </summary>
        public static bool VerboseLogs
        {
            get => EditorPrefs.GetBool(VerboseLogsKey);
            set => EditorPrefs.SetBool(VerboseLogsKey, value);
        }

        // do not rename these keys for backwards compatibility
        private const string AutoGenerateCodeOnCompilationKey = "ParameterPrefs_AutoGenerateCodeOnCompilation";
        private const string AutoGenerateDataOnAssetChangeKey = "ParameterPrefs_AutoGenerateSourceAndParameters"; // legacy name
        private const string AutoValidateDataOnAssetChangeKey = "ParameterPrefs_AutoValidateDataOnAssetChangeKey";
        private const string ShouldGenerateAllDataKey = "ParameterPrefs_ShouldGenerateAllData";
        private const string EnableInspectorAutoSaveKey = "ParameterPrefs_EnableInspectorAutoSave";
        private const string PlayModeHotLoadingKey = "ParameterPrefs_PlayModeHotLoading";
        private const string DoNotDeleteSchemaFileKey = "ParameterPrefs_DoNotDeleteSchemaFile";
        private const string ExpandableDrawerKey = "ParameterPrefs_ExpandableDrawerKey";
        private const string VerboseLogsKey = "ParameterPrefs_VerboseLogsKey";
    }
}
